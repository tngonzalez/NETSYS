// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Tablas con datos preestablecidos
model TipoCliente {
  idTipo Int    @id @default(autoincrement())
  nombre String @unique @db.VarChar(50)

  Cliente Cliente[]
}

model EstadoCliente {
  idEstado Int    @id @default(autoincrement())
  nombre   String @db.VarChar(50)

  Cliente Cliente[]

  IPTV IPTV[]
}

model EstadoActivo {
  idEstado Int    @id @default(autoincrement())
  nombre   String @db.VarChar(50)

  Router_Casa Router_Casa[]
  ont         ONT[]
  dsn         DSN_Stick[]
}

model ONT {
  idONT      Int    @id @default(autoincrement())
  idEstado   Int
  numActivo  String @unique @db.VarChar(100)
  macAddress String @unique @db.VarChar(100)
  numSN      String @db.VarChar(100)

  Cliente Cliente[]

  estado EstadoActivo @relation(fields: [idEstado], references: [idEstado])
}

model Router_Casa {
  idRouter_Casa Int    @id @default(autoincrement())
  idEstado      Int
  numActivo     String @unique @db.VarChar(50)
  serie         String @unique @db.VarChar(100)
  macAddress    String @unique @db.VarChar(100)

  estado EstadoActivo @relation(fields: [idEstado], references: [idEstado])

  Cliente Cliente[]
}

model Router_Gestor {
  idRouter_Gestor Int @id @default(autoincrement())
  idSubred_OLT    Int
  idOLT           Int

  olt    OLT?        @relation(fields: [idOLT], references: [idOLT])
  subred Subred_OLT? @relation(fields: [idSubred_OLT], references: [idRed])

  Cliente Cliente[]
}

model OLT {
  idOLT        Int    @id @default(autoincrement())
  nombreTipo   String @unique @db.VarChar(100)
  ODF          Int
  segmentoZona String @db.VarChar(50)
  ipGeneral    String @unique @db.VarChar(50)
  puertoNAT    String @db.VarChar(50)
  numOLT       Int //1 = Primera OLT

  Router_Gestor Router_Gestor[]
  Subred_OLT    Subred_OLT[]
}

model Subred_OLT {
  idRed Int    @id @default(autoincrement())
  idOLT Int
  ip    String @unique @db.VarChar(100)

  olt           OLT             @relation(fields: [idOLT], references: [idOLT])
  Router_Gestor Router_Gestor[]
}

// model Zona_OLT {
//   idZona     Int    @id @default(autoincrement())
//   idOLT      Int
//   nombreZona String @db.VarChar(100)

//   olt           OLT             @relation(fields: [idOLT], references: [idOLT])
//   Router_Gestor Router_Gestor[]
// }

model Condominio {
  idCondominio Int     @id @default(autoincrement())
  zona         String  @db.VarChar(100)
  numCasa      String? @db.VarChar(100)

  Cliente_Condominio Cliente_Condominio[]
}

model InfoCliente {
  idInfoCliente Int    @id @default(autoincrement())
  numero        String @unique @db.VarChar(30)
  nombre        String @db.VarChar(100)

  cliente Cliente[]

  Cliente_Condominio Cliente_Condominio[]
}

model BW {
  idBW   Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)

  cliente Cliente[]
}

model Cliente {
  idCliente         Int     @id @default(autoincrement())
  idInfoCliente     Int
  idTipo            Int
  idONT             Int?
  idEstado          Int
  idRouter_Gestor   Int?
  idRouter_Casa     Int?
  idBW              Int
  BW_KBPS           String  @db.VarChar(50)
  numOS             String  @db.VarChar(50)
  cajaDerivada      String  @db.VarChar(150)
  fechaInstalacion  String? @db.VarChar(50)
  comentario        String? @db.VarChar(200)
  agente            String? @db.VarChar(100)
  cloudMonitoreo    String  @unique @db.VarChar(150)
  potenciaRecepcion String? @db.VarChar(100)

  infoCliente   InfoCliente    @relation(fields: [idInfoCliente], references: [idInfoCliente])
  tipoCliente   TipoCliente    @relation(fields: [idTipo], references: [idTipo])
  ont           ONT?           @relation(fields: [idONT], references: [idONT])
  estado        EstadoCliente  @relation(fields: [idEstado], references: [idEstado])
  bw            BW             @relation(fields: [idBW], references: [idBW])
  Router_Gestor Router_Gestor? @relation(fields: [idRouter_Gestor], references: [idRouter_Gestor])
  Router_Casa   Router_Casa?   @relation(fields: [idRouter_Casa], references: [idRouter_Casa])

  Retiro Retiro[]

  IPTV IPTV[]

  Suspencion Suspencion[]

  Danado Danado[]
}

model Cliente_Condominio {
  idHistorial   Int @id @default(autoincrement())
  idInfoCliente Int
  idCondominio  Int
  estado        Int //1 = Actual  2 = Pasado

  condominio  Condominio  @relation(fields: [idCondominio], references: [idCondominio])
  infoCliente InfoCliente @relation(fields: [idInfoCliente], references: [idInfoCliente])
}

model EstadoRetiro {
  idEstado Int    @id @default(autoincrement())
  nombre   String @db.VarChar(100)

  retiro Retiro[]
}

model Retiro {
  idRetiro            Int     @id @default(autoincrement())
  idCliente           Int
  idEstadoR           Int
  numOS               String? @db.VarChar(50)
  fechaDesinstalacion String? @db.VarChar(50)
  comentario          String? @db.VarChar(200)
  agente              String? @db.VarChar(100)

  cliente Cliente      @relation(fields: [idCliente], references: [idCliente])
  estado  EstadoRetiro @relation(fields: [idEstadoR], references: [idEstado])
}

model TipoDano {
  idDano Int    @id @default(autoincrement())
  nombre String @db.VarChar(100)

  danado Danado[]
}

model Danado {
  idDanado         Int     @id @default(autoincrement())
  idCliente        Int
  fechaInstalacion String? @db.VarChar(50)
  dispositivo      String  @db.VarChar(150)
  direccionNueva   String? @db.VarChar(100)
  direccionActual  String  @db.VarChar(100)
  comentario       String? @db.VarChar(200)
  idTipoDano       Int

  tipo    TipoDano @relation(fields: [idTipoDano], references: [idDano])
  cliente Cliente  @relation(fields: [idCliente], references: [idCliente])
}

model Suspencion {
  idSuspencion    Int    @id @default(autoincrement())
  idCliente       Int
  fechaSuspencion String @db.VarChar(50)

  cliente Cliente? @relation(fields: [idCliente], references: [idCliente])
}

model EstadoInstalacion {
  idEstado Int    @id @default(autoincrement())
  nombre   String @db.VarChar(100)

  iptv IPTV[]
}

model DSN_Stick {
  idDSN      Int     @id @default(autoincrement())
  idEstado   Int
  nombre     String? @db.VarChar(100)
  usuario    String  @db.VarChar(100)
  clave      String  @db.VarChar(100)
  macAddress String? @unique @db.VarChar(100)
  dsn        String? @unique @db.VarChar(100) //Similar al NumSN

  iptv   IPTV[]
  estado EstadoActivo @relation(fields: [idEstado], references: [idEstado])
}

model IPTV {
  idIPTV              Int     @id @default(autoincrement())
  idCliente           Int
  idEstado            Int //Activo Dañado Suspención
  idEstadoInstalacion Int //Instalado - Pendiente 
  idDSN               Int?
  numOS               Int
  fechaInstalacion    String? @db.VarChar(50)
  comentario          String? @db.VarChar(200)
  agente              String? @db.VarChar(100)

  cliente        Cliente           @relation(fields: [idCliente], references: [idCliente])
  estadoInst     EstadoInstalacion @relation(fields: [idEstadoInstalacion], references: [idEstado])
  dsn            DSN_Stick?        @relation(fields: [idDSN], references: [idDSN])
  estadoServicio EstadoCliente     @relation(fields: [idEstado], references: [idEstado])
}

model InfoCliente_IPpublica {
  idInfoCliente Int    @id @default(autoincrement())
  numero        String @unique @db.VarChar(30)
  nombre        String @db.VarChar(100)

  IpPublica IpPublica[]
}

model IpPublica {
  idIP          Int    @id @default(autoincrement())
  idInfoCliente Int
  red           String @unique @db.VarChar(100)
  gateway       String @unique @db.VarChar(100)
  cliente       String @unique @db.VarChar(100)
  broadcast     String @unique @db.VarChar(100)
  punto         String @db.VarChar(100)
  nota          String @db.VarChar(200)

  infoCliente_IP InfoCliente_IPpublica @relation(fields: [idInfoCliente], references: [idInfoCliente])
}

model Usuario {
  idUsuario Int    @id @default(autoincrement())
  tipoRol   Int
  nombre    String @db.VarChar(50)
  apellidos String @db.VarChar(50)
  correo    String @db.VarChar(50) @unique
  clave     String
  }
